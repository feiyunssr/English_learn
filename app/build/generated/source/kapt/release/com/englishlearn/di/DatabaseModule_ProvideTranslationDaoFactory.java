// Generated by Dagger (https://dagger.dev).
package com.englishlearn.di;

import com.englishlearn.data.dao.TranslationDao;
import com.englishlearn.data.database.EnglishLearnDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideTranslationDaoFactory implements Factory<TranslationDao> {
  private final Provider<EnglishLearnDatabase> databaseProvider;

  public DatabaseModule_ProvideTranslationDaoFactory(
      Provider<EnglishLearnDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public TranslationDao get() {
    return provideTranslationDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvideTranslationDaoFactory create(
      Provider<EnglishLearnDatabase> databaseProvider) {
    return new DatabaseModule_ProvideTranslationDaoFactory(databaseProvider);
  }

  public static TranslationDao provideTranslationDao(EnglishLearnDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideTranslationDao(database));
  }
}
