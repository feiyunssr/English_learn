// Generated by Dagger (https://dagger.dev).
package com.englishlearn.ui.viewmodels;

import com.englishlearn.domain.usecase.DocumentImportUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DocumentImportViewModel_Factory implements Factory<DocumentImportViewModel> {
  private final Provider<DocumentImportUseCase> documentImportUseCaseProvider;

  public DocumentImportViewModel_Factory(
      Provider<DocumentImportUseCase> documentImportUseCaseProvider) {
    this.documentImportUseCaseProvider = documentImportUseCaseProvider;
  }

  @Override
  public DocumentImportViewModel get() {
    return newInstance(documentImportUseCaseProvider.get());
  }

  public static DocumentImportViewModel_Factory create(
      Provider<DocumentImportUseCase> documentImportUseCaseProvider) {
    return new DocumentImportViewModel_Factory(documentImportUseCaseProvider);
  }

  public static DocumentImportViewModel newInstance(DocumentImportUseCase documentImportUseCase) {
    return new DocumentImportViewModel(documentImportUseCase);
  }
}
