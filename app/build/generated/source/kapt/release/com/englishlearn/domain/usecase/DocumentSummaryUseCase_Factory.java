// Generated by Dagger (https://dagger.dev).
package com.englishlearn.domain.usecase;

import android.content.Context;
import com.englishlearn.data.api.GoogleAIApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DocumentSummaryUseCase_Factory implements Factory<DocumentSummaryUseCase> {
  private final Provider<Context> contextProvider;

  private final Provider<GoogleAIApi> googleAIApiProvider;

  public DocumentSummaryUseCase_Factory(Provider<Context> contextProvider,
      Provider<GoogleAIApi> googleAIApiProvider) {
    this.contextProvider = contextProvider;
    this.googleAIApiProvider = googleAIApiProvider;
  }

  @Override
  public DocumentSummaryUseCase get() {
    return newInstance(contextProvider.get(), googleAIApiProvider.get());
  }

  public static DocumentSummaryUseCase_Factory create(Provider<Context> contextProvider,
      Provider<GoogleAIApi> googleAIApiProvider) {
    return new DocumentSummaryUseCase_Factory(contextProvider, googleAIApiProvider);
  }

  public static DocumentSummaryUseCase newInstance(Context context, GoogleAIApi googleAIApi) {
    return new DocumentSummaryUseCase(context, googleAIApi);
  }
}
