// Generated by Dagger (https://dagger.dev).
package com.englishlearn.utils;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FileUtils_Factory implements Factory<FileUtils> {
  private final Provider<Context> contextProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public FileUtils_Factory(Provider<Context> contextProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    this.contextProvider = contextProvider;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public FileUtils get() {
    return newInstance(contextProvider.get(), okHttpClientProvider.get());
  }

  public static FileUtils_Factory create(Provider<Context> contextProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    return new FileUtils_Factory(contextProvider, okHttpClientProvider);
  }

  public static FileUtils newInstance(Context context, OkHttpClient okHttpClient) {
    return new FileUtils(context, okHttpClient);
  }
}
