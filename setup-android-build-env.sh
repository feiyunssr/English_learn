#!/bin/bash

# Êô∫ËÉΩËã±ËØ≠Â≠¶‰π†Âä©Êâã - AndroidÊûÑÂª∫ÁéØÂ¢ÉËá™Âä®ÂÆâË£ÖËÑöÊú¨
# English Learning Assistant - Android Build Environment Auto Setup Script

set -e  # ÈÅáÂà∞ÈîôËØØÊó∂ÈÄÄÂá∫

echo "üöÄ ÂºÄÂßãÂÆâË£ÖAndroidÊûÑÂª∫ÁéØÂ¢É..."
echo "üöÄ Starting Android build environment setup..."

# È¢úËâ≤ÂÆö‰πâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Ê£ÄÊü•ÊòØÂê¶ÊúâsudoÊùÉÈôê
check_sudo() {
    if ! sudo -n true 2>/dev/null; then
        print_error "ÈúÄË¶ÅsudoÊùÉÈôêÊù•ÂÆâË£ÖÁ≥ªÁªü‰æùËµñ"
        print_error "Need sudo permission to install system dependencies"
        echo "ËØ∑ËøêË°å: sudo $0"
        echo "Please run: sudo $0"
        exit 1
    fi
}

# ÂÆâË£ÖJava JDK
install_java() {
    print_status "ÂÆâË£ÖJava JDK 17..."
    print_status "Installing Java JDK 17..."
    
    if command -v java &> /dev/null; then
        JAVA_VERSION=$(java -version 2>&1 | head -n1 | cut -d'"' -f2)
        print_success "JavaÂ∑≤ÂÆâË£Ö: $JAVA_VERSION"
        print_success "Java already installed: $JAVA_VERSION"
    else
        sudo apt update
        sudo apt install -y openjdk-17-jdk
        
        # ËÆæÁΩÆJAVA_HOME
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
        echo "export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> ~/.bashrc
        echo "export PATH=\$PATH:\$JAVA_HOME/bin" >> ~/.bashrc
        
        print_success "Java JDK 17 ÂÆâË£ÖÂÆåÊàê"
        print_success "Java JDK 17 installation completed"
    fi
}

# ÂÆâË£ÖAndroid SDK
install_android_sdk() {
    print_status "ÂÆâË£ÖAndroid SDK..."
    print_status "Installing Android SDK..."
    
    ANDROID_HOME="/opt/android-sdk"
    
    if [ -d "$ANDROID_HOME" ]; then
        print_warning "Android SDKÁõÆÂΩïÂ∑≤Â≠òÂú®: $ANDROID_HOME"
        print_warning "Android SDK directory already exists: $ANDROID_HOME"
    else
        # ÂàõÂª∫Android SDKÁõÆÂΩï
        sudo mkdir -p $ANDROID_HOME
        cd $ANDROID_HOME
        
        # ‰∏ãËΩΩAndroidÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑
        print_status "‰∏ãËΩΩAndroidÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑..."
        print_status "Downloading Android command line tools..."
        sudo wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        sudo unzip -q commandlinetools-linux-9477386_latest.zip
        sudo rm commandlinetools-linux-9477386_latest.zip
        
        # ÈáçÊñ∞ÁªÑÁªáÁõÆÂΩïÁªìÊûÑ
        sudo mkdir -p cmdline-tools/latest
        sudo mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        
        # ËÆæÁΩÆÊùÉÈôê
        sudo chown -R $USER:$USER $ANDROID_HOME
        sudo chmod -R 755 $ANDROID_HOME
        
        print_success "Android SDK‰∏ãËΩΩÂÆåÊàê"
        print_success "Android SDK download completed"
    fi
    
    # ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè
    export ANDROID_HOME=$ANDROID_HOME
    export ANDROID_SDK_ROOT=$ANDROID_HOME
    export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
    
    echo "export ANDROID_HOME=$ANDROID_HOME" >> ~/.bashrc
    echo "export ANDROID_SDK_ROOT=\$ANDROID_HOME" >> ~/.bashrc
    echo "export PATH=\$PATH:\$ANDROID_HOME/cmdline-tools/latest/bin:\$ANDROID_HOME/platform-tools" >> ~/.bashrc
    
    # ÂÆâË£ÖÂøÖÈúÄÁöÑSDKÁªÑ‰ª∂
    print_status "ÂÆâË£ÖSDKÁªÑ‰ª∂..."
    print_status "Installing SDK components..."
    
    yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME \
        "platform-tools" \
        "platforms;android-34" \
        "build-tools;34.0.0" \
        "platforms;android-24" \
        "build-tools;30.0.3" 2>/dev/null || true
    
    print_success "Android SDKÂÆâË£ÖÂÆåÊàê"
    print_success "Android SDK installation completed"
}

# ÂÆâË£ÖÂÖ∂‰ªñÂøÖÈúÄÂ∑•ÂÖ∑
install_tools() {
    print_status "ÂÆâË£ÖÂÖ∂‰ªñÂøÖÈúÄÂ∑•ÂÖ∑..."
    print_status "Installing other required tools..."
    
    sudo apt install -y wget unzip curl git
    
    print_success "Â∑•ÂÖ∑ÂÆâË£ÖÂÆåÊàê"
    print_success "Tools installation completed"
}

# È™åËØÅÂÆâË£Ö
verify_installation() {
    print_status "È™åËØÅÂÆâË£Ö..."
    print_status "Verifying installation..."
    
    # Ê£ÄÊü•Java
    if command -v java &> /dev/null; then
        JAVA_VERSION=$(java -version 2>&1 | head -n1 | cut -d'"' -f2)
        print_success "‚úì Java: $JAVA_VERSION"
    else
        print_error "‚úó JavaÊú™ÂÆâË£Ö"
        return 1
    fi
    
    # Ê£ÄÊü•Android SDK
    if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
        print_success "‚úì Android SDK: $ANDROID_HOME"
    else
        print_error "‚úó Android SDKÊú™ÂÆâË£Ö"
        return 1
    fi
    
    # Ê£ÄÊü•ÂøÖÈúÄÁöÑSDKÁªÑ‰ª∂
    if [ -d "$ANDROID_HOME/platforms/android-34" ]; then
        print_success "‚úì Android Platform 34"
    else
        print_warning "‚ö† Android Platform 34Êú™ÂÆâË£Ö"
    fi
    
    if [ -d "$ANDROID_HOME/build-tools/34.0.0" ]; then
        print_success "‚úì Build Tools 34.0.0"
    else
        print_warning "‚ö† Build Tools 34.0.0Êú™ÂÆâË£Ö"
    fi
    
    print_success "ÂÆâË£ÖÈ™åËØÅÂÆåÊàê"
    print_success "Installation verification completed"
}

# Êõ¥Êñ∞È°πÁõÆÈÖçÁΩÆ
update_project_config() {
    print_status "Êõ¥Êñ∞È°πÁõÆÈÖçÁΩÆ..."
    print_status "Updating project configuration..."
    
    # Êõ¥Êñ∞local.properties
    cat > local.properties << EOF
# Android SDKË∑ØÂæÑ
sdk.dir=$ANDROID_HOME

# APIÂØÜÈí• (ÂèØÈÄâ)
OPENROUTER_API_KEY=your_openrouter_api_key_here
OXFORD_DICT_APP_ID=your_oxford_app_id
OXFORD_DICT_APP_KEY=your_oxford_app_key
EOF
    
    print_success "È°πÁõÆÈÖçÁΩÆÊõ¥Êñ∞ÂÆåÊàê"
    print_success "Project configuration updated"
}

# ‰∏ªÂáΩÊï∞
main() {
    echo "=================================================="
    echo "  Êô∫ËÉΩËã±ËØ≠Â≠¶‰π†Âä©Êâã AndroidÊûÑÂª∫ÁéØÂ¢ÉÂÆâË£Ö"
    echo "  English Learning Assistant Build Environment"
    echo "=================================================="
    echo ""
    
    # Ê£ÄÊü•sudoÊùÉÈôê
    check_sudo
    
    # ÂÆâË£ÖÁªÑ‰ª∂
    install_tools
    install_java
    install_android_sdk
    
    # Êõ¥Êñ∞È°πÁõÆÈÖçÁΩÆ
    update_project_config
    
    # È™åËØÅÂÆâË£Ö
    verify_installation
    
    echo ""
    echo "=================================================="
    print_success "üéâ AndroidÊûÑÂª∫ÁéØÂ¢ÉÂÆâË£ÖÂÆåÊàêÔºÅ"
    print_success "üéâ Android build environment setup completed!"
    echo "=================================================="
    echo ""
    echo "‰∏ã‰∏ÄÊ≠•:"
    echo "Next steps:"
    echo "1. ÈáçÊñ∞Âä†ËΩΩÁéØÂ¢ÉÂèòÈáè: source ~/.bashrc"
    echo "1. Reload environment: source ~/.bashrc"
    echo "2. ÊûÑÂª∫APK: ./build-apk.sh"
    echo "2. Build APK: ./build-apk.sh"
    echo ""
    
    # Á´ãÂç≥ÊµãËØïÊûÑÂª∫
    read -p "ÊòØÂê¶Á´ãÂç≥Â∞ùËØïÊûÑÂª∫APK? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        print_status "ÂºÄÂßãÊûÑÂª∫APK..."
        print_status "Starting APK build..."
        
        # ÈáçÊñ∞Âä†ËΩΩÁéØÂ¢ÉÂèòÈáè
        source ~/.bashrc 2>/dev/null || true
        export ANDROID_HOME=$ANDROID_HOME
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        # ÊûÑÂª∫APK
        chmod +x ./build-apk.sh
        ./build-apk.sh
    fi
}

# ËøêË°å‰∏ªÂáΩÊï∞
main "$@"